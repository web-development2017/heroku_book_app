[{"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\index.js":"1","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\App.js":"2","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\reportWebVitals.js":"3","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js":"4","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\BtnFns.js":"5","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\Navbar.js":"6","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\Home.js":"7","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\About.js":"8","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\User.js":"9","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js":"10","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\AddBook.js":"11","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Utils\\SortData.js":"12","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Data\\get_set_Data.js":"13"},{"size":517,"mtime":1625570861372,"results":"14","hashOfConfig":"15"},{"size":4212,"mtime":1626339249985,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1625570861372,"results":"17","hashOfConfig":"15"},{"size":3940,"mtime":1625570861344,"results":"18","hashOfConfig":"15"},{"size":269,"mtime":1626297989222,"results":"19","hashOfConfig":"15"},{"size":2126,"mtime":1626274850738,"results":"20","hashOfConfig":"15"},{"size":715,"mtime":1626275033496,"results":"21","hashOfConfig":"15"},{"size":240,"mtime":1626275033496,"results":"22","hashOfConfig":"15"},{"size":2749,"mtime":1626339331607,"results":"23","hashOfConfig":"15"},{"size":3044,"mtime":1626334453942,"results":"24","hashOfConfig":"15"},{"size":8127,"mtime":1626339568866,"results":"25","hashOfConfig":"15"},{"size":2057,"mtime":1626339568866,"results":"26","hashOfConfig":"15"},{"size":3292,"mtime":1626334453942,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"512pw5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\index.js",[],["58","59"],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\App.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\reportWebVitals.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\BtnFns.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\Navbar.js",["60"],"import { Link } from \"react-router-dom\";\r\nimport \"../css/navBarStyle.css\";\r\n\r\nexport const Navbar = ({ auth, onSidenavClick, onSignInBtnClick, onSignOutBtnClick }) =>{\r\n    // console.log(\"Navbar rendered\");\r\n    return (\r\n        <header className=\"Navbar container\">\r\n            <nav className=\"blue\">\r\n                <div className=\"nav-wrapper\">\r\n                    {auth ? <Link to=\"/user\" className=\"brand-logo\">Home</Link> : <Link to=\"/\" className=\"brand-logo\">Home</Link>}\r\n                    <a onClick={onSidenavClick} data-testid=\"menu\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul className=\"right hide-on-med-and-down sidenav-close\">\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <li>\r\n                        {\r\n                            auth ? <button data-testid=\"signOut\" id=\"signOutLink\" className=\"btn blue\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                            :\r\n                            <button data-testid=\"signIn\" id=\"signInLink\" className=\"btn blue\" onClick={onSignInBtnClick}>Sign In</button>\r\n\r\n                        }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul className=\"sidenav hide-on-large-only\" id=\"mobile-demo\">\r\n                <button className=\"sidenav-close\" id=\"sideNavClose\">\r\n                <i id=\"closeIcon\" className=\"material-icons\">\r\n                    close\r\n                </i>\r\n                </button>\r\n                <li>\r\n                {\r\n                    auth ? \r\n                    <button className=\"sidenav-close\" id=\"signOutLinkSidenav\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                    :\r\n                    <button data-testid=\"signInSidenav\" className=\"sidenav-close\" id=\"signInLinkSideNav\" onClick={onSignInBtnClick}>Sign In</button>\r\n                }\r\n                </li>\r\n                <li><Link className=\"sidenav-close\" to=\"/about\">About</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\Home.js",["61"],"import React from \"react\";\r\nimport '../css/home.css';\r\n\r\nexport const Home = ({ onSignInBtnClick }) =>{\r\n    // console.log(\"Home Rendered\")\r\n    return (\r\n    <div className=\"container\">\r\n        <h1>Home</h1>\r\n        <p>\r\n            Create a  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://accounts.google.com/signin/v2/identifier?service=print&continue=https%3A%2F%2Fbooks.google.co.uk%2Fbooks%3Fop%3Dlibrary&hl=en&flowName=GlifWebSignIn&flowEntry=ServiceLogin\">Google Books</a> account.\r\n        </p>\r\n        <p>\r\n            Once created <a id=\"homePageSignInLink\" onClick={ onSignInBtnClick }>Sign In.</a>\r\n        </p>\r\n        \r\n    </div> \r\n    )\r\n}\r\n  \r\nexport const MemoizedHome = React.memo(Home);","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\About.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\User.js",["62","63","64"],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js",["65"],"import {Link} from 'react-router-dom';\r\nimport '../../css/dply_abr_content.css';\r\nimport { postData } from '../../Data/get_set_Data';\r\n\r\nexport default function Display_ABR_Content({ abr_isLoading, all_books_read_data, onCollapsibleClick, controller, setAllBooksReadData, setABRvolId }){\r\n    \r\n\r\n    function Books(props) {\r\n\r\n        function deleteBookFn(volumeid){\r\n\r\n            setAllBooksReadData([]);\r\n            let props = {\r\n                msg: \"deleteBook_ABR_04\",\r\n                volumeid: volumeid,\r\n                controller: controller,\r\n                setAllBooksReadData: setAllBooksReadData,\r\n                setABRvolId: setABRvolId,\r\n                abr_isLoading: abr_isLoading\r\n\r\n            }\r\n            postData(props);\r\n        }\r\n        \r\n        return <>\r\n            <div className=\"foo\">\r\n            <h5 className=\"header\">{props.title} <a onClick={() => {deleteBookFn(props.id)}} title=\"delete\" className=\"addBookReadDelete right\" to=\"/deleteBook\" ><i className=\"material-icons red-text\">delete</i></a> </h5>\r\n            </div>\r\n            \r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img alt=\"book cover\" src={props.image} />\r\n                </div>\r\n\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <ul>\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn}</li>\r\n                        </ul>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>          \r\n    }\r\n\r\n    return (\r\n        \r\n        <ul className=\"collapsible col s12 m12 l6\" id=\"collapsible\" onClick={onCollapsibleClick}>\r\n            <li className=\"active\">\r\n\r\n                <div className=\"collapsible-header\">\r\n                    <i className=\"material-icons\">book</i>\r\n                    {all_books_read_data[0].totalItems} Books Read\r\n                    <Link title=\"add books\" id=\"addBookRead\" to={{pathname: \"/addBook\", state:{abr: \"abr\"}}}><i className=\"material-icons\">add</i></Link>                                \r\n                </div>\r\n\r\n                <div className=\"collapsible-body\">\r\n                    \r\n                    {all_books_read_data.map(book => \r\n                    <Books\r\n                    image={book.imageLinks}\r\n                    title={book.title}\r\n                    authors={book.authors}\r\n                    published={book.published}\r\n                    publisher={book.publisher}\r\n                    isbn={book.isbn_13}\r\n                    id={book.id}\r\n                    key={book.id} \r\n                    />)}\r\n                    \r\n                </div>                    \r\n            </li>\r\n        </ul>\r\n    )\r\n    \r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\AddBook.js",["66","67"],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Utils\\SortData.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Data\\get_set_Data.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":11,"column":21,"nodeType":"74","endLine":11,"endColumn":122},{"ruleId":"72","severity":1,"message":"73","line":13,"column":26,"nodeType":"74","endLine":13,"endColumn":82},{"ruleId":"75","severity":1,"message":"76","line":1,"column":21,"nodeType":"77","messageId":"78","endLine":1,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":57,"column":8,"nodeType":"81","endLine":57,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":72,"column":15,"nodeType":"74","endLine":79,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":27,"column":50,"nodeType":"74","endLine":27,"endColumn":163},{"ruleId":"85","severity":1,"message":"86","line":115,"column":21,"nodeType":"74","endLine":115,"endColumn":46},{"ruleId":"79","severity":1,"message":"87","line":151,"column":8,"nodeType":"81","endLine":151,"endColumn":10,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'all_books_read_data.length', 'all_books_read_data.totalItems', 'controller', 'setABRvolId', and 'setAllBooksReadData'. Either include them or remove the dependency array.","ArrayExpression",["91"],"react/jsx-pascal-case","Imported JSX component Display_ABR_Content must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'controller' and 'location.state'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [all_books_read_data.length, all_books_read_data.totalItems, controller, setABRvolId, setAllBooksReadData]",{"range":"97","text":"98"},"Update the dependencies array to be: [controller, location.state]",{"range":"99","text":"100"},[1990,1992],"[all_books_read_data.length, all_books_read_data.totalItems, controller, setABRvolId, setAllBooksReadData]",[5747,5749],"[controller, location.state]"]