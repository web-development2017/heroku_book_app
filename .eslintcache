[{"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\index.js":"1","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\App.js":"2","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\reportWebVitals.js":"3","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js":"4","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\BtnFns.js":"5","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\Navbar.js":"6","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\Home.js":"7","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\About.js":"8","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\User.js":"9","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js":"10","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\AddBook.js":"11","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Utils\\SortData.js":"12","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Data\\get_set_Data.js":"13"},{"size":517,"mtime":1625570861372,"results":"14","hashOfConfig":"15"},{"size":4399,"mtime":1626287318619,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1625570861372,"results":"17","hashOfConfig":"15"},{"size":3940,"mtime":1625570861344,"results":"18","hashOfConfig":"15"},{"size":216,"mtime":1625841914994,"results":"19","hashOfConfig":"15"},{"size":2126,"mtime":1626274850738,"results":"20","hashOfConfig":"15"},{"size":715,"mtime":1626275033496,"results":"21","hashOfConfig":"15"},{"size":240,"mtime":1626275033496,"results":"22","hashOfConfig":"15"},{"size":2731,"mtime":1626286106085,"results":"23","hashOfConfig":"15"},{"size":3041,"mtime":1626288857361,"results":"24","hashOfConfig":"15"},{"size":7703,"mtime":1626288812794,"results":"25","hashOfConfig":"15"},{"size":2210,"mtime":1626287648000,"results":"26","hashOfConfig":"15"},{"size":3290,"mtime":1626285935120,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"vkvg8u",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\index.js",[],["60","61"],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\App.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\reportWebVitals.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\BtnFns.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Navbar\\Navbar.js",["62"],"import { Link } from \"react-router-dom\";\r\nimport \"../css/navBarStyle.css\";\r\n\r\nexport const Navbar = ({ auth, onSidenavClick, onSignInBtnClick, onSignOutBtnClick }) =>{\r\n    // console.log(\"Navbar rendered\");\r\n    return (\r\n        <header className=\"Navbar container\">\r\n            <nav className=\"blue\">\r\n                <div className=\"nav-wrapper\">\r\n                    {auth ? <Link to=\"/user\" className=\"brand-logo\">Home</Link> : <Link to=\"/\" className=\"brand-logo\">Home</Link>}\r\n                    <a onClick={onSidenavClick} data-testid=\"menu\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul className=\"right hide-on-med-and-down sidenav-close\">\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <li>\r\n                        {\r\n                            auth ? <button data-testid=\"signOut\" id=\"signOutLink\" className=\"btn blue\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                            :\r\n                            <button data-testid=\"signIn\" id=\"signInLink\" className=\"btn blue\" onClick={onSignInBtnClick}>Sign In</button>\r\n\r\n                        }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul className=\"sidenav hide-on-large-only\" id=\"mobile-demo\">\r\n                <button className=\"sidenav-close\" id=\"sideNavClose\">\r\n                <i id=\"closeIcon\" className=\"material-icons\">\r\n                    close\r\n                </i>\r\n                </button>\r\n                <li>\r\n                {\r\n                    auth ? \r\n                    <button className=\"sidenav-close\" id=\"signOutLinkSidenav\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                    :\r\n                    <button data-testid=\"signInSidenav\" className=\"sidenav-close\" id=\"signInLinkSideNav\" onClick={onSignInBtnClick}>Sign In</button>\r\n                }\r\n                </li>\r\n                <li><Link className=\"sidenav-close\" to=\"/about\">About</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\Home.js",["63"],"import React from \"react\";\r\nimport '../css/home.css';\r\n\r\nexport const Home = ({ onSignInBtnClick }) =>{\r\n    console.log(\"Home Rendered\")\r\n    return (\r\n    <div className=\"container\">\r\n        <h1>Home</h1>\r\n        <p>\r\n            Create a  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://accounts.google.com/signin/v2/identifier?service=print&continue=https%3A%2F%2Fbooks.google.co.uk%2Fbooks%3Fop%3Dlibrary&hl=en&flowName=GlifWebSignIn&flowEntry=ServiceLogin\">Google Books</a> account.\r\n        </p>\r\n        <p>\r\n            Once created <a id=\"homePageSignInLink\" onClick={ onSignInBtnClick }>Sign In.</a>\r\n        </p>\r\n        \r\n    </div> \r\n    )\r\n}\r\n  \r\nexport const MemoizedHome = React.memo(Home);","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\About.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\User.js",["64","65","66"],"import { useEffect, useState } from \"react\";\r\nimport { getData } from \"../../Data/get_set_Data\";\r\nimport Display_ABR_Content from \"./Display_ABR_Content\";\r\n\r\nexport default function User({ arb_loading, abr_isLoading, all_books_read_data, setAllBooksReadData, setABRvolId, onCollapsibleClick }){\r\n    // console.log(\"User rendered\");\r\n\r\n    var controller = new AbortController();\r\n\r\n    useEffect(() => {\r\n    \r\n        if(all_books_read_data.length === 0){\r\n          /**\r\n           * covers initial state and abort controller\r\n           */\r\n          console.log(\"nothing in all_books_read_data\");\r\n          \r\n          let props = {\r\n            msg: \"userFetch\",\r\n            controller: controller,\r\n            setAllBooksReadData: setAllBooksReadData,\r\n            setABRvolId: setABRvolId\r\n\r\n          }\r\n          getData(props);\r\n    \r\n          //totalItems = total number of books.\r\n        }else if(all_books_read_data.totalItems === 0){\r\n          /**\r\n           * should cover no books\r\n           */\r\n          console.log(\"no books\");\r\n    \r\n        }else if(all_books_read_data.length > 0){\r\n          console.log(\"already have data\");\r\n        }\r\n        else{\r\n          console.log(\"this message should never display. Error in User.js file - in useEffect if else branching\");\r\n        }\r\n    \r\n        return () =>{\r\n          //Cause promise to reject with an empty array on UNMOUNT\r\n          //Test:\r\n          //1. Refresh browser \r\n          //2. F12 in browser\r\n          //3. Network tab set to SLOW 3G\r\n          //4. Click console tab\r\n          //5. Sign In\r\n          //6. Click About on Navbar.\r\n          //7. Click Home\r\n          //8. Loading... is displayed while data is being fetched as it was previously aborted on UNMOUNT\r\n          //Although, in the Network tab the data has still been fetched and returned \r\n          //but at least the Promised was rejected.\r\n          \r\n          controller.abort();    \r\n        }\r\n    }, []);\r\n\r\n    return arb_loading === true ? (\r\n    \r\n        <div className=\"container\">\r\n          <h1>Welcome</h1>\r\n          <p>Loading...</p>\r\n        </div>\r\n    \r\n      ) :\r\n      (\r\n        <div className=\"container\">\r\n          <h1>Welcome</h1>\r\n          {\r\n            all_books_read_data.totalItems === 0 ? <p>no books</p> \r\n            : <Display_ABR_Content \r\n                all_books_read_data={all_books_read_data}\r\n                onCollapsibleClick={onCollapsibleClick}\r\n                controller={controller}\r\n                abr_isLoading={abr_isLoading}\r\n                setAllBooksReadData={setAllBooksReadData}\r\n                setABRvolId={setABRvolId}\r\n              />\r\n          }\r\n          \r\n        </div>\r\n        \r\n      ) \r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js",["67"],"import {Link} from 'react-router-dom';\r\nimport '../../css/dply_abr_content.css';\r\nimport { postData } from '../../Data/get_set_Data';\r\n\r\nexport default function Display_ABR_Content({ abr_isLoading, all_books_read_data, onCollapsibleClick, controller, setAllBooksReadData, setABRvolId }){\r\n    \r\n\r\n    function Books(props) {\r\n\r\n        function deleteBookFn(volumeid){\r\n\r\n            setAllBooksReadData([]);\r\n            let props = {\r\n                msg: \"deleteBook_ABR_04\",\r\n                volumeid: volumeid,\r\n                controller: controller,\r\n                setAllBooksReadData: setAllBooksReadData,\r\n                setABRvolId: setABRvolId,\r\n                abr_isLoading: abr_isLoading\r\n\r\n            }\r\n            postData(props);\r\n        }\r\n        \r\n        return <>\r\n            <div className=\"foo\">\r\n            <h5 className=\"header\">{props.title} <a onClick={() => {deleteBookFn(props.id)}} title=\"delete\" className=\"addBookReadDelete right\" to=\"/deleteBook\" ><i className=\"material-icons red-text\">delete</i></a> </h5>\r\n            </div>\r\n            \r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img alt=\"book cover\" src={props.image} />\r\n                </div>\r\n\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <ul>\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn}</li>\r\n                        </ul>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>          \r\n    }\r\n\r\n    return (\r\n        \r\n        <ul className=\"collapsible col s12 m12 l6\" id=\"collapsible\" onClick={onCollapsibleClick}>\r\n            <li className=\"active\">\r\n\r\n                <div className=\"collapsible-header\">\r\n                    <i className=\"material-icons\">book</i>\r\n                    {all_books_read_data[0].totalItems} Books Read\r\n                    <Link title=\"add books\" id=\"addBookRead\" to={{pathname: \"/addBook\", state:{abr: \"abr\"}}}><i className=\"material-icons\">add</i></Link>                                \r\n                </div>\r\n\r\n                <div className=\"collapsible-body\">\r\n                    \r\n                    {all_books_read_data.map(book => \r\n                    <Books\r\n                    image={book.imageLinks}\r\n                    title={book.title}\r\n                    authors={book.authors}\r\n                    published={book.published}\r\n                    publisher={book.publisher}\r\n                    isbn={book.isbn_13}\r\n                    id={book.id}\r\n                    key={book.id} \r\n                    />)}\r\n                    \r\n                </div>                    \r\n            </li>\r\n        </ul>\r\n    )\r\n    \r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Pages\\User\\AddBook.js",["68","69"],"import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { postData } from \"../../Data/get_set_Data\";\r\nimport { sortData } from \"../../Utils/SortData\";\r\n\r\nexport default function AddBook({ abr_isLoading, abr_already_in_collection_volumeid, setAllBooksReadData, setABRvolId }){\r\n    /* ################################\r\n    Used in DisplayBook.js\r\n    STATES:\r\n    No message for intial state\r\n    Book found and IS in collection\r\n    Book found and NOT in collection\r\n    Book Not Found\r\n    Loading\r\n    ################################ */\r\n\r\n    const location = useLocation();\r\n    console.log(location.state);\r\n    \r\n    const [add_abr_loading, add_abr_setLoading] = useState(false);\r\n    const [bookfounddata, setBookFoundData] = useState([]);\r\n    const [book_already_in_collection, setBookAlreadyInCollection] = useState(false);\r\n    const [book_added, setBookAdded] = useState(false);\r\n\r\n    let isbn;\r\n    var controller = new AbortController();\r\n    var signal = controller.signal;\r\n\r\n    //#region GET BOOK DETAILS\r\n    function HandleISBNSubmit(e){\r\n        e.preventDefault();\r\n        isbn = '';\r\n        isbn = document.getElementById(\"ISBN\").value.trim();\r\n        let stripped_isbn = isbn.replaceAll(' ','');\r\n        add_abr_setLoading(true);\r\n        setBookAlreadyInCollection(false);\r\n        setBookAdded(false);\r\n\r\n        //CHECK IF BOOK IS ALREADY IN COLLECTION\r\n        function isInCollection(value){\r\n            let foundBookId = value.items[0].id;\r\n            const already_in_collection_match = abr_already_in_collection_volumeid.find(element => element === foundBookId);\r\n            if(already_in_collection_match){\r\n                add_abr_setLoading(false);\r\n                setBookAlreadyInCollection(true);\r\n               \r\n            }else{\r\n                console.log(\"not in collection\")\r\n                let props = {\r\n                    msg: \"getBookToAddToABR\",\r\n                    value: value,\r\n                    setBookFoundData: setBookFoundData,\r\n                    add_abr_setLoading: add_abr_setLoading\r\n                }\r\n                sortData(props)\r\n            }\r\n        }\r\n\r\n        // Function to do an Ajax call\r\n        const fetchData = async () => {\r\n        const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${stripped_isbn}&fields=totalItems,items(id,volumeInfo(title,authors,publisher,publishedDate,imageLinks/thumbnail,industryIdentifiers/type,industryIdentifiers/identifier))`, {signal}); // Generate the Response object\r\n            if (response.ok) {\r\n                const jsonValue = await response.json(); // Get JSON value from the response body\r\n                return Promise.resolve(jsonValue);\r\n            } else {\r\n                return Promise.reject('getBooks rejected');\r\n            }\r\n        }\r\n    \r\n        // Call the function and output value or error message to console\r\n        fetchData().then((value) =>{\r\n            if(value.totalItems > 0){\r\n                isInCollection(value);\r\n            }else{\r\n                console.log('google books couldn\\'t find the book with that isbn');\r\n                setBookFoundData(value);\r\n                add_abr_setLoading(false);\r\n            }   \r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });   \r\n    }\r\n    //#endregion GET BOOK DETAILS\r\n\r\n    function selectedBookToAdd(volumeid){\r\n        let props = {\r\n            msg: \"to_add_to_ABR\",\r\n            volumeid: volumeid,\r\n            setBookAdded: setBookAdded,\r\n            controller: controller,\r\n            setAllBooksReadData: setAllBooksReadData,\r\n            setABRvolId: setABRvolId,\r\n            abr_isLoading: abr_isLoading\r\n        }\r\n        postData(props);\r\n    }\r\n\r\n    function Books(props) {\r\n        return <div>\r\n            <h5 className=\"header\">{props.title}</h5>\r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img src={props.image} />\r\n                </div>\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn_13}</li>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        {/* Add this book */}\r\n                        <button onClick={() => {selectedBookToAdd(props.volumeId)}}>Add this book</button>\r\n                        <button onClick={() => {setBookFoundData([]);setBookAlreadyInCollection(false);controller.abort();}}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    }\r\n\r\n    useEffect(() =>{\r\n\r\n        return () =>{            \r\n            //ABORT FETCH\r\n            // https://stackoverflow.com/questions/30233302/promise-is-it-possible-to-force-cancel-a-promise\r\n            \r\n            setBookFoundData([]);\r\n            add_abr_setLoading(false);\r\n            \r\n            controller.abort();\r\n            \r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>Add Book</h1>\r\n\r\n            <form id=\"myForm\" onSubmit={(e) => {HandleISBNSubmit(e)}}>\r\n                <label>ISBN</label>\r\n                <input\r\n                    id=\"ISBN\"\r\n                    type=\"text\"\r\n                    pattern=\"[0-9]+\"\r\n                    required\r\n                />\r\n                <button>Find Book To Add</button>\r\n            </form>\r\n\r\n        </div>\r\n        {\r\n            add_abr_loading ? \r\n                <div className=\"container\"><p>Loading...</p></div>\r\n            :\r\n            book_added === true ?\r\n            <div className=\"container\"><p>Book Added</p></div>\r\n            :\r\n            bookfounddata.length === 0 && book_already_in_collection === false ?\r\n            <p></p>\r\n            :\r\n            book_already_in_collection === true ?\r\n            <div className=\"container\"><p>Book Already In Collection</p></div>\r\n            :\r\n            bookfounddata.length > 0 ?\r\n                \r\n            \r\n            <div className=\"container\">            \r\n                <ul className=\"col s12 m12 l6\">\r\n                    <li className=\"active\">\r\n                        <div>\r\n                            <i className=\"material-icons\">book</i>\r\n                            Book Found\r\n                        </div>\r\n\r\n                        <div>\r\n                            \r\n                            <ul>\r\n                                {bookfounddata.map(book => \r\n                                <Books \r\n                                    image={ book.imageLinks }\r\n                                    title={ book.title }\r\n                                    authors={ book.authors }\r\n                                    published={ book.publishedDate }\r\n                                    publisher={ book.publisher }\r\n                                    isbn_13={book.isbn_13}\r\n                                    volumeId={ book.id }\r\n                                    key={ book.id }\r\n                                />)}\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                <p>No Book Found</p>\r\n            </div>\r\n            \r\n        }\r\n        \r\n        </>\r\n    )\r\n}","C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Utils\\SortData.js",[],"C:\\Users\\web_d\\WebDev\\heroku_book_app\\src\\Data\\get_set_Data.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":11,"column":21,"nodeType":"76","endLine":11,"endColumn":122},{"ruleId":"74","severity":1,"message":"75","line":13,"column":26,"nodeType":"76","endLine":13,"endColumn":82},{"ruleId":"77","severity":1,"message":"78","line":1,"column":21,"nodeType":"79","messageId":"80","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":57,"column":8,"nodeType":"83","endLine":57,"endColumn":10,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":72,"column":15,"nodeType":"76","endLine":79,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":27,"column":50,"nodeType":"76","endLine":27,"endColumn":163},{"ruleId":"87","severity":1,"message":"88","line":103,"column":21,"nodeType":"76","endLine":103,"endColumn":46},{"ruleId":"81","severity":1,"message":"89","line":135,"column":8,"nodeType":"83","endLine":135,"endColumn":10,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'all_books_read_data.length', 'all_books_read_data.totalItems', 'controller', 'setABRvolId', and 'setAllBooksReadData'. Either include them or remove the dependency array.","ArrayExpression",["93"],"react/jsx-pascal-case","Imported JSX component Display_ABR_Content must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'controller'. Either include it or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [all_books_read_data.length, all_books_read_data.totalItems, controller, setABRvolId, setAllBooksReadData]",{"range":"99","text":"100"},"Update the dependencies array to be: [controller]",{"range":"101","text":"102"},[1974,1976],"[all_books_read_data.length, all_books_read_data.totalItems, controller, setABRvolId, setAllBooksReadData]",[5296,5298],"[controller]"]