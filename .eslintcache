[{"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\index.js":"1","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\App.js":"2","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\reportWebVitals.js":"3","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js":"4","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Navbar\\BtnFns.js":"5","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Navbar\\Navbar.js":"6","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\Home.js":"7","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\User.js":"8","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\AddBook.js":"9","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\About.js":"10","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js":"11","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Data\\get_set_Data.js":"12","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Utils\\SortData.js":"13","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\Display_Reading_Now.js":"14"},{"size":517,"mtime":1629363223551,"results":"15","hashOfConfig":"16"},{"size":4410,"mtime":1646057638362,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1629363223551,"results":"18","hashOfConfig":"16"},{"size":3967,"mtime":1629363223536,"results":"19","hashOfConfig":"16"},{"size":271,"mtime":1629363223536,"results":"20","hashOfConfig":"16"},{"size":2136,"mtime":1629363223536,"results":"21","hashOfConfig":"16"},{"size":1826,"mtime":1629363223536,"results":"22","hashOfConfig":"16"},{"size":6451,"mtime":1646057757744,"results":"23","hashOfConfig":"16"},{"size":10179,"mtime":1646052393655,"results":"24","hashOfConfig":"16"},{"size":251,"mtime":1629363223536,"results":"25","hashOfConfig":"16"},{"size":3319,"mtime":1645703327546,"results":"26","hashOfConfig":"16"},{"size":2855,"mtime":1646055657244,"results":"27","hashOfConfig":"16"},{"size":1784,"mtime":1629834394271,"results":"28","hashOfConfig":"16"},{"size":3668,"mtime":1645703337978,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jdx1xz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\index.js",[],["65","66"],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\App.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\reportWebVitals.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Auth\\useGoogleAuthFn.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Navbar\\BtnFns.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Navbar\\Navbar.js",["67"],"import { Link } from \"react-router-dom\";\r\nimport \"../css/navBarStyle.css\";\r\n\r\nexport const Navbar = ({ auth, onSidenavClick, onSignInBtnClick, onSignOutBtnClick }) =>{\r\n\r\n    console.log('%c render' , 'color: red');\r\n\r\n    return (\r\n        <header className=\"Navbar container\">\r\n            <nav className=\"blue\">\r\n                <div className=\"nav-wrapper\">\r\n                    {auth ? <Link to=\"/user\" className=\"brand-logo\">Home</Link> : <Link to=\"/\" className=\"brand-logo\">Home</Link>}\r\n                    <a onClick={onSidenavClick} data-testid=\"menu\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul className=\"right hide-on-med-and-down sidenav-close\">\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <li>\r\n                        {\r\n                            auth ? <button data-testid=\"signOut\" id=\"signOutLink\" className=\"btn blue\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                            :\r\n                            <button data-testid=\"signIn\" id=\"signInLink\" className=\"btn blue\" onClick={onSignInBtnClick}>Sign In</button>\r\n\r\n                        }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul className=\"sidenav hide-on-large-only\" id=\"mobile-demo\">\r\n                <button className=\"sidenav-close\" id=\"sideNavClose\">\r\n                <i id=\"closeIcon\" className=\"material-icons\">\r\n                    close\r\n                </i>\r\n                </button>\r\n                <li>\r\n                {\r\n                    auth ? \r\n                    <button className=\"sidenav-close\" id=\"signOutLinkSidenav\" onClick={onSignOutBtnClick}>Sign Out</button> \r\n                    :\r\n                    <button data-testid=\"signInSidenav\" className=\"sidenav-close\" id=\"signInLinkSideNav\" onClick={onSignInBtnClick}>Sign In</button>\r\n                }\r\n                </li>\r\n                <li><Link className=\"sidenav-close\" to=\"/about\">About</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\Home.js",["68","69"],"import React from \"react\";\r\nimport '../css/home.css';\r\n\r\nexport const Home = ({ onSignInBtnClick }) =>{\r\n    \r\n    console.log('%c render' , 'color: red');\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <h1 className=\"paddingToMatchCard\">Home</h1>\r\n        \r\n        <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <h4>Step 1</h4>\r\n                        <p>Create a  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://accounts.google.com/signin/v2/identifier?service=print&continue=https%3A%2F%2Fbooks.google.co.uk%2Fbooks%3Fop%3Dlibrary&hl=en&flowName=GlifWebSignIn&flowEntry=ServiceLogin\">Google Books</a> account.</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://accounts.google.com/signin/v2/identifier?service=print&continue=https%3A%2F%2Fbooks.google.co.uk%2Fbooks%3Fop%3Dlibrary&hl=en&flowName=GlifWebSignIn&flowEntry=ServiceLogin\">Google Books</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col s12 m6\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <h4>Step 2</h4>\r\n                        <p>Once created <a id=\"homePageSignInLink\" onClick={ onSignInBtnClick }>Sign In.</a></p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                    <a id=\"homePageSignInLink\" onClick={ onSignInBtnClick }>Sign In</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    </div> \r\n    )\r\n}\r\n  \r\nexport const MemoizedHome = React.memo(Home);","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\User.js",["70","71"],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\AddBook.js",["72","73"],"import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { postData } from \"../../Data/get_set_Data\";\r\nimport { sortData } from \"../../Utils/SortData\";\r\n\r\nfunction fetchDataFromISBN(stripped_isbn, callback, {signal}){\r\n    \r\n    // Function to do an Ajax call\r\n    const fetchData = async () => {\r\n        const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${stripped_isbn}&fields=totalItems,items(id,volumeInfo(title,authors,publisher,publishedDate,imageLinks/thumbnail,industryIdentifiers/type,industryIdentifiers/identifier))`, {signal}); // Generate the Response object\r\n        \r\n        if (response.ok) {\r\n            const jsonValue = await response.json(); // Get JSON value from the response body\r\n            return Promise.resolve(jsonValue);\r\n        } else {\r\n            return Promise.reject('getBooks rejected');\r\n        }\r\n    }\r\n    \r\n    // Call the function and output value or error message to console\r\n    fetchData().then((value) =>{\r\n        callback(value)\r\n    }).catch((error) => {\r\n        console.log(error)\r\n    });\r\n        \r\n}\r\n\r\nfunction findBookToAdd(e, {signal, collection, abr_already_in_collection_volumeid, setBookAlreadyInCollection, add_abr_setLoading, setBookFoundData}){\r\n    e.preventDefault();\r\n    let isbn;        \r\n    isbn = '';\r\n    isbn = document.getElementById(\"ISBN\").value.trim();\r\n    let stripped_isbn = isbn.replaceAll(' ','');\r\n    // #####################\r\n    add_abr_setLoading(true);\r\n    setBookAlreadyInCollection(false);\r\n    // #####################\r\n\r\n    // #5\r\n    function foo(returned_sorted_data){\r\n        console.log(returned_sorted_data[0].totalItems);\r\n        if(returned_sorted_data[0].totalItems === 1){\r\n            setBookFoundData(returned_sorted_data)\r\n        }\r\n    } \r\n\r\n    // #4 Check if already in collection and if not send value to the sort data function\r\n    function isInCollection(value){\r\n        let foundBookId = value.items[0].id;\r\n        let book_already_in_collection_volumeid;\r\n        collection === \"Reading Now\" ? console.log(\"foo\")\r\n        :\r\n        collection === \"Have Read\" ? book_already_in_collection_volumeid = abr_already_in_collection_volumeid\r\n        :\r\n        console.log(\"bar\")\r\n\r\n        const already_in_collection_match = book_already_in_collection_volumeid.find(element => element === foundBookId);\r\n        if(already_in_collection_match){\r\n            setBookAlreadyInCollection(true);\r\n            add_abr_setLoading(false);\r\n        }else{\r\n            console.log(`book not in ${collection} collection`);\r\n            let returned_sorted_data = sortData({value: value})\r\n            foo(returned_sorted_data);\r\n        }\r\n        \r\n    }\r\n\r\n    // #3 If book found Check if already in collection\r\n    function xy(value){\r\n        if(value.totalItems > 0){\r\n            console.log(\"book found, check if in collection\")\r\n            isInCollection(value)\r\n        }else{\r\n            console.log(\"no book found\")\r\n            setBookFoundData([value]);\r\n            //######################### \r\n            add_abr_setLoading(false);\r\n            //#########################\r\n        }  \r\n    }\r\n\r\n    // #2 \r\n    function callback(value){\r\n        xy(value);\r\n    }\r\n    // #1 Fetch Data\r\n    fetchDataFromISBN(stripped_isbn, callback, {signal: signal});      \r\n       \r\n}\r\n\r\nexport default function AddBook({ abr_setLoading, abr_already_in_collection_volumeid, setAllBooksReadData, setABRvolId }){\r\n    \r\n    console.log('%c render' , 'color: red');\r\n\r\n    const location = useLocation();\r\n\r\n    const [add_abr_loading, add_abr_setLoading] = useState(false);\r\n    const [abr_toadd_data, setBookFoundData] = useState([]);\r\n    const [book_already_in_collection, setBookAlreadyInCollection] = useState(false);\r\n    const [book_added, setBookAdded] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        console.log(book_already_in_collection)\r\n    },[book_already_in_collection]);\r\n\r\n    useEffect(()=>{\r\n        console.log(abr_toadd_data)\r\n        if(abr_toadd_data.length > 0){\r\n            add_abr_setLoading(false);\r\n        }\r\n    },[abr_toadd_data]);\r\n\r\n    useEffect(()=>{\r\n        console.log(book_added);\r\n    },[book_added]);\r\n    \r\n    var controller = new AbortController();\r\n    var signal = controller.signal;\r\n\r\n    function selectedBookToAdd(volumeid){\r\n        // console.log(\"%c clicked\", \"color:green\")\r\n        let props = {\r\n            // msg: \"to_add_to_ABR\",\r\n            msg: collection,\r\n            volumeid: volumeid,\r\n            setBookAdded: setBookAdded,\r\n            controller: controller,\r\n            setAllBooksReadData: setAllBooksReadData,\r\n            setABRvolId: setABRvolId,\r\n            abr_setLoading: abr_setLoading\r\n        }\r\n        console.log(props.msg)\r\n        // postData(props);\r\n    }\r\n\r\n    function Books(props) {\r\n        return <div>\r\n            <h5 className=\"header\">{props.title}</h5>\r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img src={props.image} alt={props.title}/>\r\n                </div>\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn_13}</li>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        {/* Add this book */}\r\n                        {/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                        AFTER CLICKING THE NAVBAR IS RENDERED FOR SOME REASON?????????????\r\n                        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */}\r\n                        <button onClick={() => {selectedBookToAdd(props.volumeId)}}>Add this book</button>\r\n                        <button onClick={() => {setBookFoundData([]);setBookAlreadyInCollection(false);controller.abort();}}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    }\r\n    \r\n    const [collection, setcollection] = useState(\"\")\r\n    useEffect(()=>{\r\n        console.log(collection)\r\n    },[collection])\r\n\r\n    useEffect(() =>{\r\n        \r\n        //name of collection passed through from Display_ABR_Content.js line 60\r\n        console.log(location.state.collection);\r\n        setcollection(location.state.collection)\r\n\r\n        return () =>{            \r\n            //ABORT FETCH\r\n            // https://stackoverflow.com/questions/30233302/promise-is-it-possible-to-force-cancel-a-promise\r\n            \r\n            setBookFoundData([]);\r\n            //#########################\r\n            add_abr_setLoading(false);\r\n            //#########################\r\n            \r\n            console.log(\"%c controller abort called\", 'color: purple')\r\n            controller.abort();\r\n            \r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>Add to {collection}</h1>\r\n\r\n            <form id=\"myForm\" onSubmit={(e) => {findBookToAdd(e,{signal:signal, collection: collection, abr_already_in_collection_volumeid: abr_already_in_collection_volumeid, setBookAlreadyInCollection: setBookAlreadyInCollection, add_abr_setLoading: add_abr_setLoading, setBookFoundData: setBookFoundData})}}>\r\n                <label>ISBN</label>\r\n                <input\r\n                    id=\"ISBN\"\r\n                    type=\"text\"\r\n                    // pattern=\"[0-9]+\"\r\n                    required\r\n                />\r\n                <button>Find Book To Add</button>\r\n            </form>\r\n\r\n        </div>\r\n        {/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        SEEMS TO WORK BUT NEEDS A BETTER SOLUTION\r\n        ANY SOLUTIONS WOULD BE VERY MUCH APPRECIATED\r\n        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  */}\r\n        {\r\n            add_abr_loading ? \r\n                <div className=\"container\"><p>Loading...</p></div>\r\n            :\r\n            book_added === true ?\r\n            <div className=\"container\"><p>Book Added</p></div>\r\n            :\r\n            abr_toadd_data.length === 0 && book_already_in_collection === false ?\r\n            <p></p>\r\n            :\r\n            book_already_in_collection === true ?\r\n            <div className=\"container\"><p>Book Already In Collection</p></div>\r\n            :\r\n            abr_toadd_data.length === 1  && abr_toadd_data[0].totalItems === 1?\r\n            <div className=\"container\">            \r\n                <ul className=\"col s12 m12 l6\">\r\n                    <li className=\"active\">\r\n                        <div>\r\n                            <i className=\"material-icons\">book</i>\r\n                            Book Found\r\n                        </div>\r\n\r\n                        <div>\r\n                            \r\n                            <ul>\r\n                                {abr_toadd_data.map(book => \r\n                                <Books \r\n                                    image={ book.imageLinks }\r\n                                    title={ book.title }\r\n                                    authors={ book.authors }\r\n                                    published={ book.publishedDate }\r\n                                    publisher={ book.publisher }\r\n                                    isbn_13={book.isbn_13}\r\n                                    volumeId={ book.id }\r\n                                    key={ book.id }\r\n                                />)}\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            :\r\n            abr_toadd_data[0].totalItems === 0 ?\r\n            <div className=\"container\">\r\n                <p>No Book Found</p>\r\n            </div>\r\n            :\r\n            console.log(\"shouldn't get a message here\")\r\n            \r\n        }\r\n        \r\n        </>\r\n    )\r\n}","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\About.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\Display_ABR_Content.js",["74"],"import {Link} from 'react-router-dom';\r\nimport '../../css/dply_abr_content.css';\r\nimport { postData } from '../../Data/get_set_Data';\r\n\r\nexport default function DisplayAbrContent({ abr_setLoading, all_books_read_data, onCollapsibleClick, controller, setAllBooksReadData, setABRvolId }){\r\n    \r\n    console.log('%c render' , 'color: red');\r\n\r\n    function Books(props) {\r\n\r\n        function deleteBookFn(volumeid){\r\n\r\n            setAllBooksReadData([]);\r\n            let props = {\r\n                msg: \"deleteBook_ABR_04\",\r\n                volumeid: volumeid,\r\n                controller: controller,\r\n                setAllBooksReadData: setAllBooksReadData,\r\n                setABRvolId: setABRvolId,\r\n                abr_setLoading: abr_setLoading\r\n\r\n            }\r\n            postData(props);\r\n        }\r\n        \r\n        return <>\r\n            <div className=\"foo\">\r\n            <h5 className=\"header\">{props.title} <a onClick={() => {deleteBookFn(props.id)}} title=\"delete\" className=\"addBookReadDelete right\" to=\"/deleteBook\" ><i className=\"material-icons red-text\">delete</i></a> </h5>\r\n            </div>\r\n            \r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img alt=\"book cover\" src={props.image} />\r\n                </div>\r\n\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <ul>\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn}</li>\r\n                        </ul>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>          \r\n    }\r\n\r\n    return (\r\n        //HAVE READ COLLECTION\r\n        <ul className=\"collapsible col s12 m12 l6\" id=\"collapsible\" onClick={onCollapsibleClick}>\r\n            <li>\r\n\r\n                <div className=\"collapsible-header\">\r\n                    <i className=\"material-icons\">book</i>\r\n                    {all_books_read_data[0]?.totalItems} Books Read\r\n                    {/* state is passed through to AddBook.js in the useEffect hook\r\n                    why? so can keep track of collection type ie have read, to read, reading now etc\r\n                     */}\r\n                    <Link title=\"add books\" id=\"addBookRead\" to={{pathname: \"/addBook\", state:{collection: \"Have Read\"}}}><i className=\"material-icons\">add</i></Link>                                \r\n                </div>\r\n\r\n                <div className=\"collapsible-body\">\r\n                    \r\n                    {all_books_read_data.map(book => \r\n                    <Books\r\n                    image={book.imageLinks}\r\n                    title={book.title}\r\n                    authors={book.authors}\r\n                    published={book.published}\r\n                    publisher={book.publisher}\r\n                    isbn={book.isbn_13}\r\n                    id={book.id}\r\n                    key={book.id} \r\n                    />)}\r\n                    \r\n                </div>                    \r\n            </li>\r\n        </ul> \r\n    )\r\n    \r\n}","C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Data\\get_set_Data.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Utils\\SortData.js",[],"C:\\Users\\web_d\\Source\\Repos\\heroku_book_app\\src\\Pages\\User\\Display_Reading_Now.js",["75"],"import {Link} from 'react-router-dom';\r\nimport { postData } from '../../Data/get_set_Data';\r\n\r\nexport default function Display_Reading_Now({ reading_now_data, setReadingNowData, onCollapsibleClick, controller }){\r\n\r\n    console.log('%c render' , 'color: red');\r\n\r\n    function Books(props) {\r\n\r\n        function deleteReadingNowBookFn(volumeid){\r\n\r\n            setReadingNowData([]);\r\n            let props = {\r\n                msg: \"deleteBook_ReadingNow_03\",\r\n                volumeid: volumeid,\r\n                controller: controller,\r\n                setReadingNowData: setReadingNowData,\r\n                // setABRvolId: setABRvolId,\r\n                // abr_setLoading: abr_setLoading\r\n\r\n            }\r\n            postData(props);\r\n        }\r\n        \r\n        return <>\r\n            <div className=\"foo\">\r\n            <h5 className=\"header\">{props.title} <a onClick={() => {deleteReadingNowBookFn(props.id)}} title=\"delete\" className=\"addBookReadDelete right\" to=\"/deleteBook\" ><i className=\"material-icons red-text\">delete</i></a> </h5>\r\n            </div>\r\n            \r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img alt=\"book cover\" src={props.image} />\r\n                </div>\r\n\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <ul>\r\n                        <li>Title: {props.title}</li>\r\n                        <li>Author: {props.authors}.</li>\r\n                        <li>Published: {props.published}</li>\r\n                        <li>Publisher: {props.publisher}</li>\r\n                        <li>ISBN: {props.isbn}</li>\r\n                        </ul>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>          \r\n    }\r\n\r\n    return reading_now_data[0]?.totalItems === 0 ? (\r\n        <ul className=\"col s12 m12 l6\">\r\n            <li>\r\n\r\n                <div className=\"collapsible-header\">\r\n                    <i className=\"material-icons\">book</i>\r\n                    {reading_now_data[0]?.totalItems} Books Reading Now\r\n                    <Link title=\"add books\" id=\"addBookRead\" to={{pathname: \"/addBook\", state:{collection: \"Reading Now\"}}}><i className=\"material-icons\">add</i></Link>                                \r\n                </div>\r\n\r\n                <div className=\"collapsible-body\">\r\n                    \r\n                </div>\r\n            </li>\r\n        </ul>\r\n    )\r\n    :(\r\n        <ul className=\"collapsible col s12 m12 l6\" id=\"collapsible\" onClick={onCollapsibleClick}>\r\n            <li>\r\n\r\n                <div className=\"collapsible-header\">\r\n                    <i className=\"material-icons\">book</i>\r\n                    {reading_now_data[0]?.totalItems} Books Reading Now\r\n                    <Link title=\"add books\" id=\"addBookRead\" to={{pathname: \"/addBook\", state:{collection: \"Reading Now\"}}}><i className=\"material-icons\">add</i></Link>                                \r\n                </div>\r\n\r\n                <div className=\"collapsible-body\">\r\n                    \r\n                    {reading_now_data.map(book => \r\n                    <Books\r\n                    image={book.imageLinks}\r\n                    title={book.title}\r\n                    authors={book.authors}\r\n                    published={book.published}\r\n                    publisher={book.publisher}\r\n                    isbn={book.isbn_13}\r\n                    id={book.id}\r\n                    key={book.id} \r\n                    />)}\r\n                    \r\n                </div>\r\n            </li>\r\n        </ul>\r\n    )\r\n    \r\n}",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":13,"column":21,"nodeType":"84","endLine":13,"endColumn":122},{"ruleId":"82","severity":1,"message":"83","line":29,"column":41,"nodeType":"84","endLine":29,"endColumn":97},{"ruleId":"82","severity":1,"message":"83","line":32,"column":21,"nodeType":"84","endLine":32,"endColumn":77},{"ruleId":"85","severity":1,"message":"86","line":130,"column":6,"nodeType":"87","endLine":130,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":171,"column":13,"nodeType":"84","endLine":176,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"85","severity":1,"message":"95","line":190,"column":8,"nodeType":"87","endLine":190,"endColumn":10,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"83","line":28,"column":50,"nodeType":"84","endLine":28,"endColumn":163},{"ruleId":"82","severity":1,"message":"83","line":27,"column":50,"nodeType":"84","endLine":27,"endColumn":173},{"ruleId":"78","replacedBy":"97"},{"ruleId":"80","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'all_books_read_data', 'controller', 'reading_now_data', 'setABRvolId', 'setAllBooksReadData', 'setRNDvolId', and 'setReadingNowData'. Either include them or remove the dependency array.","ArrayExpression",["101"],"react/jsx-pascal-case","Imported JSX component Display_Reading_Now must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'postData' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'controller' and 'location.state.collection'. Either include them or remove the dependency array.",["102"],["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [all_books_read_data, controller, reading_now_data, setABRvolId, setAllBooksReadData, setRNDvolId, setReadingNowData]",{"range":"107","text":"108"},"Update the dependencies array to be: [controller, location.state.collection]",{"range":"109","text":"110"},[4524,4526],"[all_books_read_data, controller, reading_now_data, setABRvolId, setAllBooksReadData, setRNDvolId, setReadingNowData]",[7162,7164],"[controller, location.state.collection]"]